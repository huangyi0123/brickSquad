<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.LimitsMapper">
	<sql id="prop">
		id,role_id roleId,tablename,ad,dl,up,`query`
	</sql>
	<select id="findLimitsById" parameterType="String" resultType="Limits">
		SELECT
		<include refid="prop" />
		FROM limits WHERE
		id=#{id}
	</select>
	<insert id="insertLimits" parameterType="Limits">
		<selectKey keyProperty="id" resultType="String" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		INSERT INTO
		limits(id,role_id,tablename,ad,dl,up,query) VALUES
		(#{id},#{roleId},#{tablename},#{ad},#{dl},#{up},#{query})
	</insert>
	<update id="updateLimitsById" parameterType="Limits">
		UPDATE limits SET
		role_id=#{roleId},
		ad=#{ad},
		dl=#{dl},
		up=#{up},
		query=#{query}
		WHERE id=#{id}
	</update>
	<delete id="deleteLimitsById" parameterType="String">
		DELETE FROM limits
		WHERE id=#{id}
	</delete>

	<select id="limitsPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="com.brick.squad.expand.LimitsExpand">

		SELECT limits.tablename,role.name roleName FROM limits JOIN role ON
		limits.role_id=role.id
		<if test="keyword!=''">
			where limits.tablename REGEXP #{keyword} or role.name REGEXP #{keyword}
		</if>
		LIMIT #{skipNum},#{takeNum}
	</select>

	<select id="limitsCount" resultType="int"
		parameterType="com.brick.squad.util.Pagination">
		select count(*) from limits
		<if test="keyword!=''">
			,role where limits.tablename REGEXP #{keyword} or role.name REGEXP
			#{keyword}
		</if>

	</select>
	<select id="findAllTableName" resultType="String">
		select Table_name t
		from information_schema.tables
		where table_schema='PracticalTraining'
	</select>
	<select id="findLimitsByRoleId" parameterType="String"
		resultType="Limits">
		SELECT
		<include refid="prop" />
		FROM limits WHERE role_id=#{roleId}
	</select>
</mapper>
