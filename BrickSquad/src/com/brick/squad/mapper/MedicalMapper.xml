<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.MedicalMapper">

	<insert id="insertMedical" parameterType="medical">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into
		medical(id,per_id,inspection_date,type_id,hospital,content,attending_surgeon)
		values(#{id},#{perId},#{inspectionDate},#{typeId},#{hospital},#{content},#{attendingSurgeon})
	</insert>


	<select id="findMedicalById" parameterType="String" resultType="medical">
		select id id ,per_id perId ,inspection_date inspectionDate ,type_id
		typeId,hospital hospital,
		content content,attending_surgeon
		attendingSurgeon
		from medical
		where id = #{id}
	</select>
	<delete id="deleteMedicalById" parameterType="String"> delete from
		medical where id=#{id}
	</delete>
	<update id="updateMedicalCententById" parameterType="medical">
		UPDATE
		medical set content=#{content},per_id= #{perId},inspection_date=#{inspectionDate},
		hospital=#{hospital},attending_surgeon=#{attendingSurgeon},type_id=#{typeId}
		where id =#{id}
	</update>
	<!-- <select id="medicalPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="medical">
		select id id ,per_id perId ,inspection_date inspectionDate ,type_id
		typeId,hospital hospital,
		content content,attending_surgeon
		attendingSurgeon
		from medical 
		limit  #{skipNum},#{takeNum}
		
		</select> -->
		<select id="medicalPagination" parameterType="com.brick.squad.util.Pagination" resultType="com.brick.squad.expand.MedicalExpand">
		<if test="keyword!=''">
		select medical.id,personal_information.name personalInformationName,medical.inspection_date inspectionDate,type.name typeName,
				medical.hospital,medical.content,medical.attending_surgeon attendingSurgeon
				from medical JOIN type on medical.type_id=type.id JOIN personal_information on medical.per_id=personal_information.id
				where   personal_information.name REGEXP #{keyword} or type.name REGEXP #{keyword} 
				or medical.content REGEXP #{keyword} or medical.hospital REGEXP #{keyword}
				limit  #{skipNum},#{takeNum}
		</if>
		<if test="keyword==''">
		select medical.id,personal_information.name personalInformationName,medical.inspection_date inspectionDate,type.name typeName,
				medical.hospital,medical.content,medical.attending_surgeon attendingSurgeon
				from medical JOIN type on medical.type_id=type.id JOIN personal_information on medical.per_id=personal_information.id
				limit  #{skipNum},#{takeNum}
		</if>
		</select>
	
	<select id="findMedicalAllCount" resultType="int" parameterType="com.brick.squad.util.Pagination">
		select COUNT(*) from medical
		<if test="keyword!=''">
		  JOIN type on medical.type_id=type.id JOIN personal_information on medical.per_id=personal_information.id
				where   personal_information.name REGEXP #{keyword} or type.name REGEXP #{keyword} 
				or medical.content REGEXP #{keyword} or medical.hospital REGEXP #{keyword}
				limit  #{skipNum},#{takeNum}
		</if>
		
	</select>
	
	<select id="findPersonalInformationAndType"  parameterType="java.lang.String"  resultType="com.brick.squad.expand.MedicalExpand">
		select medical.id,personal_information.name personalInformationName,medical.inspection_date inspectionDate,type.name typeName,
				medical.hospital,medical.content,medical.attending_surgeon attendingSurgeon
				from medical JOIN type on medical.type_id=type.id JOIN personal_information on medical.per_id=personal_information.id
		where medical.id=#{id,jdbcType=VARCHAR}
	</select>
	
	
</mapper>
