<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.PersonalInformationMapper">
	<sql id="prop">
		id,`name`,birthday,gender,idcard, address_id
		addressId,retirement_unit retirementUnit,
		retirement_date
		retirementDate, engaged_industry engagedIndustry,
		weight,height,income,family_history familyHistory,is_purchasing
		isPurchasing,is_supremacy isSupremacy,is_pureq isPureq,pureq_type_id
		pureqTypeId,nation_id nationId,culture_id cultureId,marriage_id
		marriageId,zip
	</sql>
	<sql id="prop2">
		p.id,p.`name`,p.birthday,p.gender,idcard, p.address_id
		addressId,p.retirement_unit retirementUnit,
		p.retirement_date
		retirementDate, p.engaged_industry engagedIndustry,
		p.weight,p.height,p.income,p.family_history
		familyHistory,p.is_purchasing
		isPurchasing,p.is_supremacy
		isSupremacy,p.is_pureq isPureq,pureq_type_id
		pureqTypeId,t.`name`
		nationId,p.culture_id cultureId,p.marriage_id
		marriageId,p.zip
		from
		personal_information p JOIN type t ON p.nation_id=t.id
	</sql>
	<sql id="serach">
		p.`name` REGEXP #{keyword} or
		p.idcard REGEXP #{keyword}
	</sql>
	<select id="findPersonalInformationById" resultType="PersonalInformation"
		parameterType="String">
		SELECT
		<include refid="prop" />
		from personal_information WHERE id=#{id}
	</select>
	<insert id="insertPersonalInformation" parameterType="personalInformation">
		INSERT INTO
		personal_information
		(id,name,birthday,gender,idcard,address_id,retirement_unit,retirement_date,engaged_industry,weight,height,income,family_history,is_purchasing,is_supremacy,is_pureq,pureq_type_id,nation_id,culture_id,marriage_id,zip)
		VALUES(#{id},#{name},#{birthday},#{gender},#{idCard},#{addressId},#{retirementUnit},#{retirementDate},#{engagedIndustry},#{weight},#{height},#{income},#{familyHistory},#{isPurchasing},#{isSupremacy},#{isPureq},#{pureqTypeId},#{nationId},#{cultureId},#{marriageId},#{zip})
	</insert>
	<update id="updatePersonalInformationById" parameterType="PersonalInformation">
		UPDATE
		personal_information
		set `name`=#{name},
		birthday=#{birthday},
		gender=#{gender},
		idcard=#{idCard},
		address_id=#{addressId},
		retirement_unit=#{retirementUnit},
		retirement_date=#{retirementDate},
		engaged_industry=#{engagedIndustry},
		weight=#{weight},
		height=#{height},
		income=#{income},
		family_history=#{familyHistory},
		is_purchasing=#{isPurchasing},
		is_supremacy=#{isSupremacy},
		is_pureq=#{isPureq},
		pureq_type_id=#{pureqTypeId},
		nation_id=#{nationId},
		culture_id=#{cultureId},
		marriage_id=#{marriageId},
		zip=#{zip}
		WHERE
		id=#{id}
	</update>
	<delete id="deletePersonalInformationById" parameterType="String">
		DELETE
		FROM personal_information WHERE id=#{id}
	</delete>
	<select id="personalInformationPagination" resultType="PersonalInformation"
		parameterType="com.brick.squad.util.Pagination">
		select
		<include refid="prop2" />
		where p.name not in ('')
		<if test="keyword!=''">
			and (
			<include refid="serach" />
			)
		</if>
		limit #{skipNum},#{takeNum}
	</select>
	<select id="personalInformationCount" parameterType="com.brick.squad.util.Pagination"
		resultType="int">
		select
		count(*)
		from personal_information p
		where p.name not in ('')
		<if test="keyword!=''">
			and (
			<include refid="serach" />
			)
		</if>
		limit #{skipNum},#{takeNum}
	</select>
	<select id="findAllPersonalInformations" resultType="personalInformation">
		SELECT
		<include refid="prop" />
		FROM personal_information
	</select>


	<!-- 查询老人姓名和id -->
	<select id="findAllPersonalInformation" resultType="com.brick.squad.util.Select">
		SELECT
		id,name
		FROM personal_information
	</select>
	<!-- 用于guidance表的回显 -->
	<select id="findPerIdAndIdCard" resultType="PersonalInformation">
		select id,idcard
		idCard,name from personal_information
	</select>



	<select id="findThereAllById" parameterType="String"
		resultType="PersonalInformation">
		SELECT
		p.id,p.`name`,p.birthday,p.gender,p.idcard,p.address_id
		addressId,p.retirement_unit retirementUnit,
		p.retirement_date
		retirementDate, p.engaged_industry engagedIndustry,
		p.weight,p.height,p.income,p.family_history
		familyHistory,p.is_purchasing
		isPurchasing,p.is_supremacy
		isSupremacy,p.is_pureq isPureq,p.pureq_type_id
		pureqTypeId,p.culture_id cultureId,p.marriage_id
		marriageId,p.zip,t.name nationId
		FROM personal_information p LEFT JOIN
		type t ON p.nation_id=t.id
		where p.id=#{id}
	</select>
	<!-- 对老人根据年龄段进行统计 -->
	<select id="findPerByAge" resultType="map" parameterType="type">
		SELECT
		COALESCE(sum(CASE WHEN s.age BETWEEN 0 AND 50 THEN 1 else 0
		end),0) a,
		COALESCE(sum(CASE WHEN s.age BETWEEN 51 AND 60 THEN 1 else 0 end),0) b,
		COALESCE(sum(CASE WHEN s.age BETWEEN 61 AND 70 THEN 1 else 0 end),0)
		c,
		COALESCE(sum(CASE WHEN s.age BETWEEN 71 AND 80 THEN 1 else 0 end),0) d,
		COALESCE(sum(CASE WHEN s.age BETWEEN 81 AND 90 THEN 1 else 0 end),0)
		e,
		COALESCE(sum(CASE WHEN s.age BETWEEN 91 AND 100 THEN 1 else 0 end),0) f,
		COALESCE(sum(CASE WHEN s.age BETWEEN 101 AND 1000 THEN 1 else 0
		end),0) g
		FROM(
		SELECT ROUND(DATEDIFF(CURDATE(),
		p.birthday)/365.2422)
		age
		FROM
		personal_information p JOIN `user` u on
		u.id=p.id
		<if test="id!=''">
			WHERE
			u.branch_id=#{id}
		</if>

		) s WHERE s.age is not NULL
	</select>

</mapper>
