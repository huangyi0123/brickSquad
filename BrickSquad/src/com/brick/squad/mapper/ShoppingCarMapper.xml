<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.ShoppingCarMapper">
	<sql id="Base_Column_List">
		id, article_id articleId, per_id perId, number, date
	</sql>
	<select id="findShoppingCarById" parameterType="java.lang.String"
		resultType="ShoppingCar">
		SELECT
		<include refid="Base_Column_List" />
		FROM shopping_car
		WHERE id=#{id,jdbcType=VARCHAR}
	</select>
	<select id="findShoppingCarByArticleId" parameterType="java.lang.String"
		resultType="ShoppingCar">
		SELECT
		<include refid="Base_Column_List" />
		FROM shopping_car
		WHERE article_id=#{articleId,jdbcType=VARCHAR}
	</select>
	<select id="findShoppingCar" resultType="ShoppingCar">
		SELECT
		<include refid="Base_Column_List" />
		FROM shopping_car
	</select>
	<insert id="insertShoppingCar" parameterType="ShoppingCar">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		INSERT INTO
		shopping_car (id, article_id, per_id,
		number, date)
		VALUES
		(#{id,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR},
		#{perId,jdbcType=VARCHAR},
		#{number,jdbcType=INTEGER},
		#{date,jdbcType=TIMESTAMP})
	</insert>
	<delete id="deleteShoppingCarById" parameterType="java.lang.String">
		DELETE FROM
		shopping_car
		WHERE id = #{id,jdbcType=VARCHAR}
	</delete>
	<!-- 根据id修改购物车数量 -->
	<update id="updateShoppingCarNumberById" parameterType="ShoppingCar">
		UPDATE
		shopping_car set
		number = #{number}
		WHERE id = #{id} and per_id=#{perId}
	</update>
	<update id="updateShoppingCarById" parameterType="ShoppingCar">
		UPDATE
		shopping_car
		SET article_id = #{articleId,jdbcType=VARCHAR},
		per_id =
		#{perId,jdbcType=VARCHAR},
		number = #{number,jdbcType=INTEGER},
		date =
		#{date,jdbcType=TIMESTAMP}
		WHERE id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="findShoppingCarCount" resultType="Integer"
		parameterType="com.brick.squad.util.Pagination">
		SELECT COUNT(*)
		FROM personal_information p,article a,shopping_car s
		WHERE s.article_id=a.id
		AND s.per_id=p.id
		<if test="keyword!=''">

			AND p.`name` REGEXP #{keyword} OR a.aname REGEXP
			#{keyword}

		</if>
	</select>
	<select id="shoppingCarPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="com.brick.squad.expand.ShoppingCarExpand">

		<if test="keyword!=''">
			SELECT p.`name`,a.aname,s.number,s.date,s.id
			from
			shopping_car s
			INNER JOIN personal_information p
			ON s.per_id =p.id
			INNER JOIN article a
			ON s.article_id=a.id WHERE p.`name` REGEXP
			#{keyword} OR a.aname REGEXP
			#{keyword}
			limit #{skipNum},#{takeNum}
		</if>
		<if test="keyword==''">
			SELECT p.`name`,a.aname,s.number,s.date,s.id
			from
			shopping_car s
			INNER JOIN personal_information p
			ON s.per_id =p.id
			INNER JOIN article a
			ON s.article_id=a.id limit #{skipNum},#{takeNum}
		</if>
	</select>
	<select id="findShoppingCarAndUserAndPsersonalInformationById"
		parameterType="java.lang.String" resultType="com.brick.squad.expand.ShoppingCarExpand">
		SELECT
		p.`name`,a.aname,s.number,s.date,s.id
		from shopping_car s
		INNER JOIN
		personal_information p
		ON s.per_id =p.id
		INNER JOIN article a
		ON
		s.article_id=a.id
		WHERE s.id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteShoppingCarByPerId" parameterType="java.lang.String">
		DELETE FROM
		shopping_car
		WHERE per_id = #{perId,jdbcType=VARCHAR}
	</delete>
	<!-- 根据老人id匹配查询出相应的信息，用于前台购物车 -->
	<select id="findArticIdAllArtic" parameterType="com.brick.squad.util.ShoppingCarPagination"
		resultType="com.brick.squad.expand.ShoppingCarAndArticle">
		SELECT s.id,s.article_id articleId,s.per_id
		perId,s.number,s.date,a.aname,
		a.type_id typeId,a.business_id
		businessId,a.price,a.stock,a.describes,a.image,p.`name` FROM
		shopping_car s
		JOIN article a on s.article_id=a.id JOIN
		personal_information p on s.per_id=p.id
		WHERE
		s.per_id=#{perId}
		LIMIT
		#{skipNum},#{takeNum}
	</select>
	<!--统计上述信息条数用作分页显示 -->
	<select id="findShoppingCarPerIdCount" resultType="Integer"
		parameterType="com.brick.squad.util.ShoppingCarPagination">
		SELECT COUNT(*)
		FROM
		shopping_car s
		JOIN article a on
		s.article_id=a.id JOIN
		personal_information p on s.per_id=p.id
		WHERE
		s.per_id=#{perId}
	</select>
	<!-- 根据用户id查询购物车总额 -->
	<select id="findUserAllPrice" parameterType="String" resultType="float">
		SELECT sum(a.price*s.number) s FROM article a JOIN
		(SELECT sc.article_id,sc.number FROM shopping_car sc WHERE
		per_id=#{userId}) s
		on a.id=s.article_id
	</select>
</mapper>
