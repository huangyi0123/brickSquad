<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.ShopActivitiesMapper">


	<select id="findShopActivitiesById" resultType="ShopActivities"
		parameterType="String">
		select id,type_id typeId,start_time startTime,end_time
		endTime,business_id
		businessId,article_id articleId from
		shop_activities where id=#{id}
	</select>

	<insert id="insertShopActivitiesById" parameterType="ShopActivities">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into
		shop_activities(id,type_id,start_time,end_time,business_id,article_id)
		values(#{id},#{typeId},#{startTime},#{endTime},#{businessId},#{articleId})
	</insert>

	<delete id="deleteShopActivities" parameterType="String">
		delete from
		shop_activities where id=#{id}
	</delete>

	<update id="updateShopActivitiesById" parameterType="String">
		UPDATE
		shop_activities set id=#{id} ,
		type_id=#{typeId},
		start_time=#{startTime},
		end_time=#{endTime},
		business_id=#{businessId},
		article_id=#{articleId}
		where id =#{id}
	</update>



	<!-- 分页查询 级联查询 -->
	<select id="shopActivitiesPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="com.brick.squad.expand.ShopActivitiesExpand">

		<!-- <if test="keyword!=''"> SELECT shop_activities.id,article.aname aname,business.`name` 
			bname,type.`name` tname, shop_activities.start_time startTime,shop_activities.end_time 
			endTime from shop_activities JOIN type ON shop_activities.type_id=type.id 
			JOIN business ON shop_activities.business_id = business.id JOIN article ON 
			shop_activities.article_id =article.id WHERE article.aname REGEXP #{keyword} 
			or business.`name` REGEXP #{keyword} or type.`name` REGEXP #{keyword} limit 
			#{skipNum},#{takeNum} </if> <if test="keyword==''"> SELECT shop_activities.id,article.aname 
			aname,business.`name` bname,type.`name` tname, shop_activities.start_time 
			startTime,shop_activities.end_time endTime from shop_activities JOIN type 
			ON shop_activities.type_id=type.id JOIN business ON shop_activities.business_id 
			= business.id JOIN article ON shop_activities.type_id =article.id limit #{skipNum},#{takeNum} 
			</if> -->
		SELECT a.aname aname,b.shopname bname,t.`name` tname,sa.start_time
		startTime,sa.end_time endTime FROM shop_activities sa
		join type t on sa.type_id=t.id
		JOIN business b on sa.business_id=b.id
		JOIN article a on sa.article_id=a.id

		<if test="keyword!='' and keyword!=null">
			WHERE t.`name` REGEXP #{keyword} or b.shopname REGEXP #{keyword} or
			a.aname REGEXP #{keyword}
		</if>
		limit #{skipNum},#{takeNum}
	</select>

	<select id="findShopActivitiesAllCount" resultType="int"
		parameterType="com.brick.squad.util.Pagination">
		select
		count(*) from shop_activities
		<if test="keyword!=''">
			,article,business,type
			WHERE article.aname REGEXP
			#{keyword} or business.name REGEXP #{keyword}
			or type.name REGEXP
			#{keyword} limit #{skipNum},#{takeNum}
		</if>
	</select>


	<select id="findAllShopActivities" resultType="ShopActivities">
		select
		shop_activities.type_id from shop_activities
	</select>



	<select id="findShopActivitiesAndTypeAndArticle" parameterType="java.lang.String"
		resultType="com.brick.squad.expand.ShopActivitiesExpand">
		SELECT shop_activities.id,article.aname
		aname,business.`name`
		bname,type.`name` tname,
		shop_activities.start_time startTime,shop_activities.end_time endTime

		from shop_activities JOIN type ON shop_activities.type_id=type.id JOIN

		business ON shop_activities.business_id = business.id JOIN article ON
		shop_activities.type_id =article.id
	</select>

</mapper>
