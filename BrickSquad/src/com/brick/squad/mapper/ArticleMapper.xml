<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.ArticleMapper">

	<!-- 查询 -->
	<select id="findArticleById" resultType="article" parameterType="String">
		select id,aname aname,type_id typeId,business_id businessId,describes,price,stock,image from article where id=#{id}
	</select>

	<insert id="insertArticle" parameterType="article">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into
		article(id,aname,type_id,business_id,price,stock,describes,image)
		values(#{id},#{aname},#{typeId},#{businessId},#{price},#{stock},#{describes},#{image})
	</insert>

	<delete id="deleteArticleById" parameterType="String">
		delete from article
		where id=#{id}
	</delete>

	<update id="updateArticleById" parameterType="article">
		update article set
		
		aname=#{aname},
		type_id=#{typeId},
		business_id=#{businessId},
		price=#{price},
		stock=#{stock},
		describes=#{describes},
		image=#{image}
		where id = #{id}
	</update>


	<select id="articlePagination" parameterType="com.brick.squad.util.Pagination"
		resultType="com.brick.squad.expand.ArticleExpand">
		SELECT a.id,a.aname,t.`name` tname,a.price,a.stock,b.`name`
		bname,a.describes
		FROM article a INNER JOIN type t ON a.type_id = t.id INNER JOIN business b
		ON a.business_id = b.id
		limit #{skipNum},#{takeNum}

	</select>


	<select id="findArticleAllCount" resultType="int">
		select
		count(*) FROM article a INNER JOIN type t ON a.type_id = t.id INNER JOIN business b
		ON a.business_id = b.id
	</select>
	<select id="findArticle" resultType="com.brick.squad.util.Select">
		SELECT id,aname name
		FROM
		article
	</select>

	<!-- <select id="findAllArticle" resultType="article">
		select article.type_id typeId
		from article
	</select> -->
		<select id="findAllTypeAndBusiness" resultType="article">
	SELECT a.id,a.aname,a.type_id typeId,a.business_id businessId,t.`name` tname,a.price,a.stock,b.`name`
		bname,a.describes
		FROM article a INNER JOIN type t ON a.type_id = t.id INNER JOIN business b
		ON a.business_id = b.id
	</select>
	
	<select id="findAllArticle" resultType="com.brick.squad.expand.ArticleExpand">
	SELECT a.id,a.aname,t.`name` tname,a.price,a.stock,b.`name`
		bname,a.describes
		FROM article a INNER JOIN type t ON a.type_id = t.id INNER JOIN business b
		ON a.business_id = b.id
	</select>
	
	
	<select id="findArticleAndTypeAndBusiness" parameterType="java.lang.String" resultType="com.brick.squad.expand.ArticleExpand">
	SELECT a.id,a.aname,t.`name` tname,a.price,a.stock,b.`name`
		bname,a.describes
		FROM article a INNER JOIN type t ON a.type_id = t.id INNER JOIN business b
		ON a.business_id = b.id
		WHERE a.id = #{id,jdbcType=VARCHAR}
	
	</select>

</mapper>
