<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.brick.squad.mapper.MemberShipApplicationMapper">

	<select id="findMemberShipApplicationById" parameterType="String"
		resultType="memberShipApplication">
		select id,membership_type_id memberShipTypeId,user_id
		userId,per_id
		perId,deposit from membership_application where id=#{id}
	</select>


	<insert id="insertMemberShipApplicationById" parameterType="memberShipApplication">
		<selectKey resultType="String" keyProperty="id" order="BEFORE">
			select replace(uuid(),'-','') from dual
		</selectKey>
		insert into membership_application(id,membership_type_id,user_id
		,per_id ,deposit)
		values
		(#{id},#{memberShipTypeId},#{userId},#{perId},#{deposit})
	</insert>

	<delete id="deleteMemberShipApplicationById" parameterType="String">
		delete from membership_application where id=#{id}
	</delete>


	<update id="updateMemberShipApplicationById" parameterType="memberShipApplication">
		update membership_application
		set
		membership_type_id=#{memberShipTypeId},
		user_id=#{userId},
		per_id=#{perId},
		deposit=#{deposit}
		where id=#{id}
	</update>


	<!-- 分页查询 -->
	<!-- <select id="MemberShipApplicationPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="memberShipApplication">
		select id,membership_type_id memberShipTypeId,user_id userId,per_id
		perId,deposit from membership_application limit #{skipNum},#{takeNum}
	</select> -->
	<!-- <select id="MemberShipApplicationPagination" parameterType="com.brick.squad.util.Pagination"
		resultType="com.brick.squad.expand.MemberShipApplicationExpand">
		select type.name typeName,user.username userUsername,personal_information.name personalInformationName,membership_application.deposit from membership_application
				JOIN type ON membership_application.membership_type_id=type.id
				JOIN user ON membership_application.user_id=user.id
				JOIN personal_information ON membership_application.per_id=personal_information.id
				 limit #{skipNum},#{takeNum}
	</select> -->
	<!-- 分页查询 级联查询 -->
	<select id="MemberShipApplicationPagination" parameterType="com.brick.squad.util.Pagination" resultType="com.brick.squad.expand.MemberShipApplicationExpand">
		<if test="keyword!=''">
		SELECT m.id, t.`name` tname,u.username,p.`name` pname,m.deposit
		FROM membership_application m INNER JOIN `user` u ON m.user_id = u.id
		INNER JOIN type t ON m.membership_type_id=t.id INNER JOIN
		personal_information p ON m.per_id = p.id	
		where   t.`name` REGEXP #{keyword} or u.username REGEXP #{keyword} or p.`name` REGEXP #{keyword}
		limit #{skipNum},#{takeNum}
		</if>
		<if test="keyword==''">
		SELECT m.id, t.`name` tname,u.username,p.`name` pname,m.deposit
		FROM membership_application m INNER JOIN `user` u ON m.user_id = u.id
		INNER JOIN type t ON m.membership_type_id=t.id INNER JOIN
		personal_information p ON m.per_id = p.id	limit #{skipNum},#{takeNum}
		</if>
	</select>


	<select id="findMemberShipApplicationAllCount" resultType="int"  parameterType="com.brick.squad.util.Pagination">
	<if test="keyword==''">
		select count(*) from 
		membership_application m INNER JOIN `user` u ON m.user_id = u.id
		INNER JOIN type t ON m.membership_type_id=t.id INNER JOIN
		personal_information p ON m.per_id = p.id	
	</if>
	<if test="keyword!=''">
		select count(*) from 
		membership_application m INNER JOIN `user` u ON m.user_id = u.id
		INNER JOIN type t ON m.membership_type_id=t.id INNER JOIN
		personal_information p ON m.per_id = p.id
		where   t.`name` REGEXP #{keyword} or u.username REGEXP #{keyword} or p.`name` REGEXP #{keyword}
		limit #{skipNum},#{takeNum}
	</if>
	</select>

	<select id="findAllMemberShipApplications" resultType="memberShipApplication">
		select
		membership_application.membership_type_id from membership_application
	</select>


</mapper>
